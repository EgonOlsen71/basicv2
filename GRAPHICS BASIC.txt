An introduction to Graphics Basic

Graphics Basic is a BASIC extension that is implemented on top of this BASIC V2 environment. It adds the graphics capabilities far superior to those of the Commodore 64 while still maintaining the simplicity of BASIC V2. This documentation gives a brief overview of how to use it.


Initialization

Using Graphics Basic is pretty simple. You just have to register the extension to Basic, like so:

String[] code = Loader.loadProgram("src/test/resources/ext/doublebuffer.bas");
Basic.registerExtension(new GraphicsBasic());
Basic basic = new Basic(code);
basic.run();

Note that the extension is added to Basic in a static way, i.e. it is avialable to all Basic instances from there on. The included BASIC shell provides support for this extension by default.


Examples

Examples can be found in the test class com.sixtyfour.test.BasicExtensionTest respectively in src/test/resources/ext.


Functions

id=LOADSHAPE("filename") -  Loads a file in PNG/JPG format and assigns it to a shape. This function returns an ID which can be used to draw the shape later on. For this function to work, a graphics output has to be created. After closing it, the shapes become undefined again and can't (unlike other graphical primitives like lines and points) be drawn into nothingness.


Commands

GRON x,y - Opens a new graphics output of the given size. If there is already one open for the current machine, this command will be ignored.

GROFF - Closes an open graphics output. If there is none open for the current machine, nothing happens.

COLOR r,g,b(,a) -  Sets the paint color. Each value is [0..255]. Values outside of this range will overflow, i.e. 257 will result in 1. The forth parameter is an optional alpha value. If none is given, the color will be fully opaque.

CLEAR - Clears the screen with the current paint color.

BUFFERMODE 0|1 - Sets the buffer mode. 0 is single buffered and default. All graphics operations happen on the front buffer in this mode. 1 is double buffering, i.e. all graphics operation happen in a back buffer and won't be visible until you call FLIP. Any other value will be treated just like 1.

FLIP - flips the buffers if double buffering is enabled. Doesn't do anything, if it's not.

FILLMODE 0|1 - Sets the fill mode for circles and rectangles. 0 means that only the outlines will be drawn. 1 (or any other value) means, that the form will be filled with the current paint color.

PLOT x,y - Plots a point at x,y in the current paint color.

LINE xs, ys, xe, ye - Draws a line from xs,ys to xe,ye in the current paint color.

CIRCLE x, y, xr (,yr) - Draws a circle/an ellipse with a midpoint of x,y and a radius of xr in x- and yr in y-direction in the current paint color. If the optional yr parameter isn't given, it is assumed to be xr, i.e. the result will be an actual circle.

RECT xs, ys, xe, ye - Draw a rectangle from xs,ys to xe,ye in the current paint color.

FILL x,y - does a flood fill starting at x,y. All adjacent pixels of the same color as the pixel at x,y will be filled with the current paint color.

GSAVE "filename" - Saves the current screen to disk with the given filename. The resulting file will be in PNG format.

DRAWSHAPE id, x, y(, xd, yd) -  Draws a shape with the id "id" at position x,y. xd and yd are optional scaling parameter which indicate the size of the drawn shape in x- respectively y-direction.